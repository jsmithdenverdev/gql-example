services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    expose:
      - 5432
    ports:
      - 5432:5432
    volumes:
      - ./pg-init/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./pg-init/pg_hba.conf:/docker-entrypoint-initdb.d/pg_hba.conf
      - postgres_data:/var/lib/postgresql/data
    command:
      [
        "postgres",
        "-c",
        "hba_file=/docker-entrypoint-initdb.d/pg_hba.conf",
        "-c",
        "log_statement=all",
        "-c",
        "listen_addresses=*",
      ]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      start_period: 10s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: .
      dockerfile: Dockerfile.migrations
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./deploy:/app/deploy
      - ./revert:/app/revert
      - ./verify:/app/verify
      - ./sqitch.conf:/app/sqitch.conf
      - ./sqitch.plan:/app/sqitch.plan
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      context: .
      target: dev
    volumes:
      - .:/app
      - go-cache:/root/.cache/go-build
      - go-modules:/go/pkg/mod
    ports:
      - "8080:8080" # API port
      - "2345:2345" # Delve debugger port
      - "6060:6060" # pprof port
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/todos?sslmode=disable
      - GO_ENV=development
    depends_on:
      migrations:
        condition: service_completed_successfully
      db:
        condition: service_healthy

volumes:
  postgres_data:
  go-cache:
  go-modules:
